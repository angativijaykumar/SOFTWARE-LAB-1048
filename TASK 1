class WeatherModel:
    @staticmethod
    def quadratic_model(time, coefficients):
        a, b, c = coefficients
        temperature = a * (time ** 2) + b * time + c
        return temperature

def main():
    # Hard-coded coefficients
    coefficients = [0.1, -2, 10]

    # Example usage
    time_point = 3
    result = WeatherModel.quadratic_model(time_point, coefficients)
    print(f"Temperature at time {time_point} is {result} degrees Celsius.")

if _name_ == "_main_":
    main()

class WeatherModel:
  @staticmethod
  def quadratic_model(time, coefficients):
      # Quadratic equation: y = ax^2 + bx + c
      a, b, c = coefficients
      temperature = a * (time ** 2) + b * time + c
      return temperature

def get_user_input():
  # Get user input for coefficients
  a = float(input("Enter coefficient a: "))
  b = float(input("Enter coefficient b: "))
  c = float(input("Enter coefficient c: "))
  return [a, b, c]

def main():
  coefficients = get_user_input()
  time_point = float(input("Enter time point: "))
  result = WeatherModel.quadratic_model(time_point, coefficients)
  print(f"Temperature at time {time_point} is {result} degrees Celsius.")

if _name_ == "_main_":
  main()

class WeatherModel:
  @staticmethod
  def quadratic_model(time, coefficients):
      # Quadratic equation: y = ax^2 + bx + c
      a, b, c = coefficients
      temperature = a * (time ** 2) + b * time + c
      return temperature

def read_coefficients_from_file(file_path):
  # Read coefficients from file
  with open(file_path, "r") as file:
      coefficients = [float(coef) for coef in file.readline().split()]
  return coefficients

def main():
  coefficients = read_coefficients_from_file("coefficients.txt")
  time_point = float(input("Enter time point: "))
  result = WeatherModel.quadratic_model(time_point, coefficients)
  print(f"Temperature at time {time_point} is {result} degrees Celsius.")

if _name_ == "_main_":
  main()

class WeatherModel:
  @staticmethod
  def quadratic_model(time, coefficients):
      # Quadratic equation: y = ax^2 + bx + c
      a, b, c = coefficients
      temperature = a * (time ** 2) + b * time + c
      return temperature

def read_coefficients_from_file(file_path):
  # Read coefficients from file for multiple sets
  with open(file_path, "r") as file:
      coefficients_list = [list(map(float, line.split())) for line in file.readlines()]
  return coefficients_list

def main():
  coefficients_list = read_coefficients_from_file("coefficients_multi.txt")
  time_point = float(input("Enter time point: "))
  for i, coefficients in enumerate(coefficients_list, 1):
      result = WeatherModel.quadratic_model(time_point, coefficients)
      print(f"Set {i}: Temperature at time {time_point} is {result} degrees Celsius.")

if _name_ == "_main_":
  main()
